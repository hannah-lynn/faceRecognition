{"version":3,"sources":["components/Logo/face.svg","components/Navigation/Navigation.js","components/Logo/Logo.js","components/Rank/Rank.js","components/ImageLinkForm/ImageLinkForm.js","components/FaceRecognition/FaceRecognition.js","components/Signin/Signin.js","components/Register/Register.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","Logo","options","max","height","width","paddingTop","src","Face","alt","Rank","ImageLinkForm","onInputChange","onSubmit","type","onChange","FaceRecognition","imageUrl","box","id","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Signin","htmlFor","name","value","href","Register","class","for","app","Clarifai","App","apiKey","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","setState","event","input","target","state","models","initModel","FACE_DETECT_MODEL","then","faceDetectModel","predict","response","console","log","route","this","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.75501636.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/face.6fb51fc1.svg\";","import React from 'react';\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n  return isSignedIn === true ? (\n    <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\n      <p\n        onClick={() => onRouteChange('signout')}\n        className='f3 link dim black underline pa3 pointer'\n      >\n        Sign Out\n      </p>\n    </nav>\n  ) : (\n    <nav style={{ display: 'flex', justifyContent: 'flex-end' }}>\n      <p\n        onClick={() => onRouteChange('signin')}\n        className='f3 link dim black underline pa3 pointer'\n      >\n        Sign In\n      </p>\n      <p\n        onClick={() => onRouteChange('register')}\n        className='f3 link dim black underline pa3 pointer'\n      >\n        Register\n      </p>\n    </nav>\n  );\n};\n\nexport default Navigation;\n","import React from 'react';\nimport Tilt from 'react-tilt';\nimport './Logo.css';\nimport Face from './face.svg';\n\nconst Logo = () => {\n  return (\n    <div className='ma4 mt0'>\n      <Tilt\n        className='Tilt'\n        options={{ max: 65 }}\n        style={{ height: 150, width: 150 }}\n      >\n        <div className='Tilt-inner pa3'>\n          {' '}\n          <img style={{ paddingTop: '4px' }} src={Face} alt='logo' />{' '}\n        </div>\n      </Tilt>\n    </div>\n  );\n};\n\nexport default Logo;\n","import React from 'react';\n\nconst Rank = () => {\n  return (\n    <div>\n      <div className='white f3'>{'Hello'}</div>\n      {/* <div className='white f1'>{'#3'}</div> */}\n    </div>\n  );\n};\n\nexport default Rank;\n","import React from 'react';\nimport './ImageLinkForm.css';\n\nconst ImageLinkForm = ({ onInputChange, onSubmit }) => {\n  return (\n    <div>\n      <p className='f3'>{'This magic app will detect faces, give it a try'}</p>\n      <div className='center'>\n        <div className='form center pa4 br3 shadow-5'>\n          <input\n            className='f4 pa2 w-70 center'\n            type='text'\n            onChange={onInputChange}\n          />\n          <button\n            className='w-30 grow f4 link ph3 pv2 dib white bg-light-purple'\n            onClick={onSubmit}\n          >\n            Detect\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ImageLinkForm;\n","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n  return (\n    <div className='center ma'>\n      <div className='absolute mt2'>\n        <img\n          id='inputImage'\n          className='width:500px height:auto'\n          src={imageUrl}\n          alt=''\n        />\n        <div\n          className='bounding-box'\n          style={{\n            top: box.topRow,\n            right: box.rightCol,\n            bottom: box.bottomRow,\n            left: box.leftCol,\n          }}\n        ></div>\n      </div>\n    </div>\n  );\n};\n\nexport default FaceRecognition;\n","import React from 'react';\n\nconst Signin = ({ onRouteChange }) => {\n  return (\n    <article className='br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 center shadow-5'>\n      <main className='pa4 black-80'>\n        <form className='measure'>\n          <fieldset id='sign_up' className='ba b--transparent ph0 mh0'>\n            <legend className='f2 fw6 ph0 mh0'>Sign In</legend>\n            <div className='mt3'>\n              <label className='db fw6 lh-copy f6' htmlFor='email-address'>\n                Email\n              </label>\n              <input\n                className='pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100'\n                type='email'\n                name='email-address'\n                id='email-address'\n              />\n            </div>\n            <div className='mv3'>\n              <label className='db fw6 lh-copy f6' htmlFor='password'>\n                Password\n              </label>\n              <input\n                className='b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100'\n                type='password'\n                name='password'\n                id='password'\n              />\n            </div>\n          </fieldset>\n          <div className=''>\n            <input\n              onClick={() => onRouteChange('home')}\n              className='b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib'\n              type='submit'\n              value='Sign in'\n            />\n          </div>\n          <div className='lh-copy mt3'>\n            <p\n              onClick={() => onRouteChange('register')}\n              href='#0'\n              className='f6 link dim black db pointer'\n            >\n              Register\n            </p>\n          </div>\n        </form>\n      </main>\n    </article>\n  );\n};\n\nexport default Signin;\n","import React from 'react';\n\nconst Register = ({ onRouteChange }) => {\n  return (\n    <article className='br3 ba dark-gray b--black-10 mv4 w-100 w-50-m w-25-l mw5 center shadow-5'>\n      <main class='pa4 black-80'>\n        <form className='measure'>\n          <fieldset id='sign_up' className='ba b--transparent ph0 mh0'>\n            <legend className='f2 fw6 ph0 mh0'>Register</legend>\n            <div className='mt3'>\n              <label className='db fw6 lh-copy f6' for='name'>\n                Name\n              </label>\n              <input\n                className='pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100'\n                type='text'\n                name='name'\n                id='name'\n              />\n            </div>\n            <div className='mt3'>\n              <label className='db fw6 lh-copy f6' htmlFor='email-address'>\n                Email\n              </label>\n              <input\n                className='pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100'\n                type='email'\n                name='email-address'\n                id='email-address'\n              />\n            </div>\n            <div className='mv3'>\n              <label className='db fw6 lh-copy f6' htmlFor='password'>\n                Password\n              </label>\n              <input\n                className='b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100'\n                type='password'\n                name='password'\n                id='password'\n              />\n            </div>\n          </fieldset>\n          <div className=''>\n            <input\n              onClick={() => onRouteChange('home')}\n              className='b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib'\n              type='submit'\n              value='Register'\n            />\n          </div>\n        </form>\n      </main>\n    </article>\n  );\n};\n\nexport default Register;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/Navigation/Navigation';\nimport Logo from './components/Logo/Logo';\nimport Rank from './components/Rank/Rank';\n// import Particles from 'react-particles-js';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport Clarifai from 'clarifai';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\n\nconst app = new Clarifai.App({\n  apiKey: '1af58a0d419f40738bbc26a80ca045aa',\n});\n\n// const particleOptions = {\n//   particles: {\n//     number: {\n//       value: 50,\n//       density: {\n//         enable: true,\n//         value_area: 400,\n//       },\n//     },\n//   },\n// };\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false,\n    };\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace =\n      data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputImage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - clarifaiFace.right_col * width,\n      bottomRow: height - clarifaiFace.bottom_row * height,\n    };\n  };\n\n  displayFaceBox = (box) => {\n    this.setState({ box: box });\n  };\n\n  onInputChange = (event) => {\n    this.setState({ input: event.target.value });\n  };\n\n  onSubmit = () => {\n    this.setState({ imageUrl: this.state.input });\n    app.models\n      .initModel({\n        id: Clarifai.FACE_DETECT_MODEL,\n      })\n      .then((faceDetectModel) => {\n        return faceDetectModel.predict(\n          'https://samples.clarifai.com/face-det.jpg'\n        );\n      })\n      .then((response) => {\n        console.log(response);\n      });\n  };\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({ isSignedIn: false });\n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route: route });\n  };\n\n  render() {\n    const { isSignedIn, imageUrl, route, box } = this.state;\n    return (\n      <div className='App'>\n        {/* <Particles className='particles' params={particleOptions} /> */}\n        <Navigation\n          isSignedIn={isSignedIn}\n          onRouteChange={this.onRouteChange}\n        />\n        {this.state.route === 'home' ? (\n          <div>\n            <Logo />\n            <Rank />\n            <ImageLinkForm\n              onInputChange={this.onInputChange}\n              onSubmit={this.onSubmit}\n            />\n            <FaceRecognition box={box} imageUrl={imageUrl} />\n          </div>\n        ) : route === 'signin' ? (\n          <Signin onRouteChange={this.onRouteChange} />\n        ) : (\n          <Register onRouteChange={this.onRouteChange} />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}